name: Continuous Integration Flow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq git

    - uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install semantic-release dependencies
      run: |
        npm install -g semantic-release
        npm install -g @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/exec

    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "short_sha=$calculatedSha" >> $GITHUB_OUTPUT

    - name: Setup and execute semantic-release
      id: semantic_release_prep
      run: |
        cat <<EOF>> .releaserc.yml
        branches:
        - main
        - name: dev
          prerelease: true
        plugins:
        - "@semantic-release/commit-analyzer"
        - "@semantic-release/release-notes-generator"
        - "@semantic-release/changelog"
        - "@semantic-release/git"
        - "@semantic-release/github"
        - - "@semantic-release/exec"
          - verifyReleaseCmd: echo \${nextRelease.version} > nextVersion
        EOF
        semantic-release --dry-run --debug -r ${{ github.server_url }}/${{ github.repository }}.git
        test -f nextVersion && echo "SRTAG=v$(cat nextVersion)" >> $GITHUB_OUTPUT || echo "SRTAG=${{ steps.vars.outputs.short_sha }}" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: prepare
    services:
      docker:
        image: docker:20.10.16
        options: --privileged
    steps:
    - uses: actions/checkout@v3

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=raw,value=latest-${{ github.ref_name }}
        #   type=raw,value=${{ steps.semantic_release_prep.outputs.SRTAG }}

    - name: Build and push Docker image
      id: build_n_push
      uses: docker/build-push-action@v4
      with:
        context: ./
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Finalize and execute semantic-release
      id: semantic_release
      run: |
        git config --global user.name "GitHubBot"
        git config --global user.email "GitHubBot@github.com"
        semantic-release --debug -r ${{ github.server_url }}/${{ github.repository }}.git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
